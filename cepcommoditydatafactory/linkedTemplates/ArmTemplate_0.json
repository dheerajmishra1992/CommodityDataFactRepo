{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cepcommoditydatafactory"
		},
		"AzureDataLakeStoreLS_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'AzureDataLakeStoreLS'"
		},
		"AzureDataLakeStoreLS_properties_typeProperties_dataLakeStoreUri": {
			"type": "string",
			"defaultValue": "https://commoditydatalake.azuredatalakestore.net/webhdfs/v1"
		},
		"AzureDataLakeStoreLS_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "5fb1e707-c6bf-4f63-bd6e-a02a3a8169b4"
		},
		"AzureDataLakeStoreLS_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "74ffd735-2e9a-4b79-9275-f2cbb8540eed"
		},
		"AzureDataLakeStoreLS_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "0548d595-4741-4418-a85c-2e74933d2a15"
		},
		"AzureDataLakeStoreLS_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "rs-training"
		},
		"commodityapils_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.data.gov.in/resource/9ef84268-d588-465a-a308-a864a43d0070?api-key=579b464db66ec23bdd00000147c9b85db8cc419a6de5754298ed72a1&format=csv&offset=0&limit=10000"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStoreLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDataLakeStore",
				"typeProperties": {
					"dataLakeStoreUri": "[parameters('AzureDataLakeStoreLS_properties_typeProperties_dataLakeStoreUri')]",
					"servicePrincipalId": "[parameters('AzureDataLakeStoreLS_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStoreLS_servicePrincipalKey')]"
					},
					"tenant": "[parameters('AzureDataLakeStoreLS_properties_typeProperties_tenant')]",
					"subscriptionId": "[parameters('AzureDataLakeStoreLS_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('AzureDataLakeStoreLS_properties_typeProperties_resourceGroupName')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/commodityapils')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('commodityapils_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntimeDataLake')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommodityHttpDataSet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "commodityapils",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/commodityapils')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommodityRead')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LastDays": {
						"type": "int"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": {
							"value": "@concat('commodityrawdata/', formatDateTime(adddays(utcnow(), mul(dataset().LastDays, -1)), 'yyyy/MM/dd-MM-yyyy'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommodityStoreDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('commodityrawdata','/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd-MM-yyyy'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CommodityWriteDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"LastDaysW": {
						"type": "int"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": {
							"value": "@concat('commoditydata/output/', formatDateTime(adddays(utcnow(), mul(dataset().LastDaysW, -1)), 'yyyy/MM/dd-MM-yyyy'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commoditybackupdataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": {
							"value": "@concat(formatDateTime(utcnow(),'dd-MM-yyyy'),'.csv')",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@concat('commoditybackup','/',formatDateTime(utcnow(),'yyyy'),'/',formatDateTime(utcnow(),'MM'),'/',formatDateTime(utcnow(),'dd-MM-yyyy'))",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_inputcommodityfolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": "commodityrawdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "timestamp",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "district",
						"type": "String"
					},
					{
						"name": "market",
						"type": "String"
					},
					{
						"name": "commodity",
						"type": "String"
					},
					{
						"name": "variety",
						"type": "String"
					},
					{
						"name": "arrival_date",
						"type": "String"
					},
					{
						"name": "min_price",
						"type": "String"
					},
					{
						"name": "max_price",
						"type": "String"
					},
					{
						"name": "modal_price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lastncommoditydataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoreLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": "aggregatedcommoditydata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStoreLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FilterDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('IsActive'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(variables('VarDays'),0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "VarDays",
													"value": {
														"value": "@variables('VarDecDays')",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "VarDays",
													"value": {
														"value": "@string(pipeline().parameters.DaysP)",
														"type": "Expression"
													}
												}
											}
										]
									}
								},
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "If Condition1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "2.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureDataLakeStoreReadSettings",
												"recursive": true,
												"wildcardFileName": "*.csv"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureDataLakeStoreWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "CommodityRead",
											"type": "DatasetReference",
											"parameters": {
												"LastDays": {
													"value": "@int(variables('VarDays'))",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "CommodityWriteDS",
											"type": "DatasetReference",
											"parameters": {
												"LastDaysW": {
													"value": "@int(variables('VarDays'))",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Set variable 2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Copy data1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "VarDecDays",
										"value": {
											"value": "@string(sub(int(variables('VarDays')), 1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable 2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "IsActive",
										"value": {
											"value": "@less(int(variables('VarDecDays')), 1)",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"parameters": {
					"DaysP": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"VarDays": {
						"type": "String",
						"defaultValue": "0"
					},
					"VarDecDays": {
						"type": "String",
						"defaultValue": "0"
					},
					"IsActive": {
						"type": "Boolean"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CommodityRead')]",
				"[concat(variables('factoryId'), '/datasets/CommodityWriteDS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commoditybackuppipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "commoditybackupactivity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CommodityHttpDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "commoditybackupdataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-15T11:14:43Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CommodityHttpDataSet')]",
				"[concat(variables('factoryId'), '/datasets/commoditybackupdataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/httptodatalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy commodity data to lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 300,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "CommodityHttpDataSet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CommodityStoreDataset",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@concat('commodity','_',formatDateTime(convertFromUTC(utcnow(),'India Standard Time'),'dd-MM-yyyy_hh'),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-18T12:58:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CommodityHttpDataSet')]",
				"[concat(variables('factoryId'), '/datasets/CommodityStoreDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/last3commodity')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "last3commodity",
						"description": "test",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureDataLakeStoreReadSettings",
									"recursive": true,
									"wildcardFolderPath": "commodityrawdata",
									"wildcardFileName": "*.csv"
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureDataLakeStoreWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_inputcommodityfolder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "lastncommoditydataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-16T07:29:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_inputcommodityfolder')]",
				"[concat(variables('factoryId'), '/datasets/lastncommoditydataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commoditylastndata')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_inputcommodityfolder",
								"type": "DatasetReference"
							},
							"name": "dsinputcommodity"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "lastncommoditydataset",
								"type": "DatasetReference"
							},
							"name": "lastncommoditysink"
						}
					],
					"transformations": [
						{
							"name": "AggregateCommodity"
						}
					],
					"script": "parameters{\n\tlastdays as string\n}\nsource(output(\n\t\ttimestamp as string,\n\t\tstate as string,\n\t\tdistrict as string,\n\t\tmarket as string,\n\t\tcommodity as string,\n\t\tvariety as string,\n\t\tarrival_date as string,\n\t\tmin_price as string,\n\t\tmax_price as string,\n\t\tmodal_price as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tmodifiedAfter: (addDays(currentUTC(),-toInteger($lastdays))),\n\tmodifiedBefore: (addDays(currentUTC(),0)),\n\twildcardPaths:['commodityrawdata/**/*.csv']) ~> dsinputcommodity\ndsinputcommodity aggregate(groupBy(commodity),\n\tmin_price = min(toInteger(min_price)),\n\t\tmax_price = max(toInteger(max_price)),\n\t\tmodal_price = avg(toInteger(modal_price))) ~> AggregateCommodity\nAggregateCommodity sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:[(\"AggregatedCommodityDataofLast{$lastdays}DaysFrom_{left(toString(addDays(currentUTC(),-toInteger($lastdays))),10)}.csv\")],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lastncommoditysink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_inputcommodityfolder')]",
				"[concat(variables('factoryId'), '/datasets/lastncommoditydataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/executecommoditydataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "commoditylastndata",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "commoditylastndata",
								"type": "DataFlowReference",
								"parameters": {
									"lastdays": {
										"value": "'@{pipeline().parameters.noofdays}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"dsinputcommodity": {},
									"lastncommoditysink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"noofdays": {
						"type": "int"
					}
				},
				"variables": {
					"filename": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-10-16T07:29:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/commoditylastndata')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/commodityscheduletrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "httptodatalake",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "commoditybackuppipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-11-04T16:42:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								13,
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/httptodatalake')]",
				"[concat(variables('factoryId'), '/pipelines/commoditybackuppipeline')]"
			]
		}
	]
}